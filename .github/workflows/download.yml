name: Download Novel from Tomato

on:
  workflow_dispatch:
    inputs:
      novel_id:
        description: '番茄小说ID'
        required: true
        type: string

jobs:
  download-novel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests bs4 fake-useragent tqdm urllib3 pycryptodome

      - name: Create novels directory
        run: mkdir -p novels

      - name: Download Novel
        run: |
          # 修改爬虫程序以适应自动化运行
          cat > auto_download.py << 'EOF'
          import sys
          import os
          import importlib.util
          from datetime import datetime
          
          # 动态导入2.py模块
          spec = importlib.util.spec_from_file_location("novel_downloader", "2.py")
          novel_downloader = importlib.util.module_from_spec(spec)
          spec.loader.exec_module(novel_downloader)
          Run = novel_downloader.Run
          
          if __name__ == "__main__":
              if len(sys.argv) < 2:
                  print("请提供小说ID")
                  sys.exit(1)
              
              book_id = sys.argv[1]
              save_path = os.path.join(os.getcwd(), "novels")
              
              print(f"开始下载小说ID: {book_id}")
              print(f"保存路径: {save_path}")
              
              # 创建日志文件
              with open(os.path.join(save_path, "download_log.txt"), "a", encoding="utf-8") as log:
                  log.write(f"\n--- 下载开始: {datetime.now()} ---\n")
                  log.write(f"小说ID: {book_id}\n")
              
              try:
                  Run(book_id, save_path)
                  with open(os.path.join(save_path, "download_log.txt"), "a", encoding="utf-8") as log:
                      log.write(f"下载完成: {datetime.now()}\n")
              except Exception as e:
                  with open(os.path.join(save_path, "download_log.txt"), "a", encoding="utf-8") as log:
                      log.write(f"下载失败: {str(e)}\n")
                  sys.exit(1)
          EOF
          
          # 执行下载
          python auto_download.py ${{ github.event.inputs.novel_id }}

      - name: Commit and Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add novels/
          git commit -m "下载小说: ID ${{ github.event.inputs.novel_id }}" || echo "No changes to commit"
          git push
